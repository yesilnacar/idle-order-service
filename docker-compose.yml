version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: "WARN"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - zookeeper

  kafka-init:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - kafka
    entrypoint:
      - /bin/sh
      - -c
      - |
        sleep 10 &&
        kafka-topics --bootstrap-server kafka:9092 \
          --create --if-not-exists \
          --topic UserRegisteredEvent \
          --partitions 1 --replication-factor 1
        
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: idle_order_db
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d idle_order_db"]
      interval: 10s
      timeout: 5s
      retries: 5

#  idleorderservice.api:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: idleorderservice.api
#    ports:
#      - "5000:5000"
#    environment:
#      ASPNETCORE_ENVIRONMENT: Development
#      ASPNETCORE_URLS: http://+:5000
#      ConnectionStrings__Default: "Host=postgres;Port=5432;Database=idle_order_db;Username=myuser;Password=mysecretpassword"
#      Kafka__BootstrapServers: kafka:9092
#    depends_on:
#      postgres:
#        condition: service_healthy
#      kafka:
#        condition: service_healthy

volumes:
  pgdata:
